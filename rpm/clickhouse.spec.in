#
# RPM build specification file for Yandex ClickHouse DBMS
#
# Copyright (C) 2016 Red Soft LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CentOS 7 would force ".el7.centos", we want to avoid that.
%if 0%{?rhel} != 0
%define dist .el%{rhel}
%endif

Summary: Yandex ClickHouse DBMS
Name: clickhouse
Version: @CH_VERSION@
Release: 3%{?dist}
License: Apache License 2.0
Group: Applications/Databases
Source: ClickHouse-@CH_VERSION@-@CH_TAG@.zip
Url: https://clickhouse.yandex/
BuildRoot: %{_tmppath}/%{name}-%{version}-build

%description
ClickHouse is an open-source column-oriented database management
system that allows generating analytical data reports in real time.

%package server-common
Summary: Common configuration files for %{name}

%description server-common
This package contains common configuration files for ClickHouse DBMS.

%package server
Summary: %{name} server binary
Requires: %{name}-server-common = %{version}-%{release}

%description server
This package contains server binaries for ClickHouse DBMS.

%package client
Summary: %{name} client binary
Requires: %{name}-server = %{version}-%{release}

%description client
This package contains client binary for ClickHouse DBMS.

%package compressor
Summary: %{name} compressor binary

%description compressor
This package contains compressor utility for ClickHouse DBMS.

%prep
%setup -q -n ClickHouse-%{version}-@CH_TAG@
CH_VERSION=@CH_VERSION@
CH_VERSION_ARR=(${CH_VERSION//./ })
sed -i -- "s/VERSION_REVISION .*)/VERSION_REVISION ${CH_VERSION_ARR[2]})/g" dbms/cmake/version.cmake
sed -i -- "s/VERSION_DESCRIBE .*)/VERSION_DESCRIBE v@CH_VERSION@-@CH_TAG@)/g" dbms/cmake/version.cmake

%build
export CC=/opt/rh/devtoolset-6/root/usr/bin/gcc
export CXX=/opt/rh/devtoolset-6/root/usr/bin/g++
rm -rf build
mkdir build
cd build
cmake .. -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX=/usr
make %{?_smp_mflags}
make check
cd ..

%install
rm -rf $RPM_BUILD_ROOT

DAEMONS="clickhouse clickhouse-compressor clickhouse-client clickhouse-server"

cd build
for daemon in $DAEMONS; do\
	DESTDIR=$RPM_BUILD_ROOT cmake -DCOMPONENT=$daemon -P cmake_install.cmake;\
done
cd ..

mkdir -p $RPM_BUILD_ROOT/etc/security/limits.d
cp debian/clickhouse.limits $RPM_BUILD_ROOT/etc/security/limits.d/clickhouse.conf

mkdir -p $RPM_BUILD_ROOT/etc/init.d
cp debian/clickhouse-server.init $RPM_BUILD_ROOT/etc/init.d/clickhouse-server
mkdir -p $RPM_BUILD_ROOT/etc/cron.d
cp debian/clickhouse-server.cron.d $RPM_BUILD_ROOT/etc/cron.d/clickhouse-server

mkdir -p $RPM_BUILD_ROOT/usr/share/clickhouse/bin $RPM_BUILD_ROOT/usr/share/clickhouse/headers
#debian/copy_clang_binaries.sh $RPM_BUILD_ROOT/usr/share/clickhouse/bin/
#./copy_headers.sh . $RPM_BUILD_ROOT/usr/share/clickhouse/headers

%clean
rm -rf $RPM_BUILD_ROOT

%post compressor
CLICKHOUSE_USER=clickhouse
CLICKHOUSE_GROUP=${CLICKHOUSE_USER}

# Make sure the administrative user exists
if ! getent passwd ${CLICKHOUSE_USER} > /dev/null; then
	adduser --system --no-create-home --home /nonexistent \
		--shell /bin/false --comment "Clickhouse server" clickhouse > /dev/null
fi

mkdir -p /etc/compressor/conf.d
chown -R ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} /etc/compressor

%post server
if [ $1 = 1 ]; then
    /sbin/chkconfig --add clickhouse-server
fi

# CODE TAKEN FROM clickhouse-server-base.postinst (with update-rc logic commented out)

CLICKHOUSE_USER=clickhouse
CLICKHOUSE_GROUP=${CLICKHOUSE_USER}
CLICKHOUSE_DATADIR=/var/lib/clickhouse
CLICKHOUSE_DATADIR_OLD=/opt/clickhouse  # remove after 2017-06-01
CLICKHOUSE_LOGDIR=/var/log/clickhouse-server
CLICKHOUSE_SERVER_ETCDIR=/etc/clickhouse-server

#if [ -x "/etc/init.d/clickhouse-server" ]; then
#	update-rc.d clickhouse-server defaults 19 19 >/dev/null || exit $?
#fi

# Make sure the administrative user exists
if ! getent passwd ${CLICKHOUSE_USER} > /dev/null; then
	adduser --system --no-create-home --home /nonexistent \
		--shell /bin/false --comment "Clickhouse server" clickhouse > /dev/null
fi

# if the user was created manually, make sure the group is there as well
if ! getent group ${CLICKHOUSE_GROUP} > /dev/null; then
	addgroup --system ${CLICKHOUSE_GROUP} > /dev/null
fi

# make sure user is in the correct group
if ! id -Gn ${CLICKHOUSE_USER} | grep -qw ${CLICKHOUSE_USER}; then
	adduser ${CLICKHOUSE_USER} ${CLICKHOUSE_GROUP} > /dev/null
fi

# check validity of user and group
if [ "`id -u ${CLICKHOUSE_USER}`" -eq 0 ]; then
	echo "The ${CLICKHOUSE_USER} system user must not have uid 0 (root).
Please fix this and reinstall this package." >&2
	exit 1
fi

if [ "`id -g ${CLICKHOUSE_GROUP}`" -eq 0 ]; then
	echo "The ${CLICKHOUSE_USER} system user must not have root as primary group.
Please fix this and reinstall this package." >&2
	exit 1
fi

if [ ! -d ${CLICKHOUSE_DATADIR} ]; then
	# only for compatibility for old /opt/clickhouse, remove after 2017-06-01
	if [ -d ${CLICKHOUSE_DATADIR_OLD} ]; then
		ln -s ${CLICKHOUSE_DATADIR_OLD} ${CLICKHOUSE_DATADIR}
	else
		# DONT remove after 2017-06-01 :
		mkdir -p ${CLICKHOUSE_DATADIR}
		chown ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} ${CLICKHOUSE_DATADIR}
		chmod 700 ${CLICKHOUSE_DATADIR}
	fi
fi

if [ ! -d ${CLICKHOUSE_LOGDIR} ]; then
	mkdir -p ${CLICKHOUSE_LOGDIR}
	chown root:${CLICKHOUSE_GROUP} ${CLICKHOUSE_LOGDIR}
	# Allow everyone to read logs, root and clickhouse to read-write
	chmod 775 ${CLICKHOUSE_LOGDIR}
fi

if [ -d ${CLICKHOUSE_LOGDIR} ]; then
	# only for compatibility for old metrika user, remove string after 2017-06-01 :
	su -s /bin/sh ${CLICKHOUSE_USER} -c "test -w ${CLICKHOUSE_LOGDIR}" || chown -R root:${CLICKHOUSE_GROUP} ${CLICKHOUSE_LOGDIR}; chmod -R ug+rw ${CLICKHOUSE_LOGDIR}
fi

if [ -d ${CLICKHOUSE_SERVER_ETCDIR} ]; then
	# -R only for compatibility for old metrika user, remove -R after 2017-06-01
	su -s /bin/sh ${CLICKHOUSE_USER} -c "test -w ${CLICKHOUSE_SERVER_ETCDIR}" || chown -R ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} ${CLICKHOUSE_SERVER_ETCDIR}
fi

# Clean old dynamic compilation results
if [ -d "${CLICKHOUSE_DATADIR}/build" ]; then
	rm -f ${CLICKHOUSE_DATADIR}/build/*.cpp ${CLICKHOUSE_DATADIR}/build/*.so ||:
fi

%preun server
if [ $1 = 0 ]; then
    /sbin/service clickhouse-server stop > /dev/null 2>&1
    /sbin/chkconfig --del clickhouse-server
fi

%postun server
if [ $1 -ge 1 ]; then
    /sbin/service clickhouse-server restart >/dev/null 2>&1
fi

%files server-common
/etc/clickhouse-server/config.xml
/etc/clickhouse-server/users.xml

%files server
/etc/cron.d/clickhouse-server
/etc/init.d/clickhouse-server
/etc/security/limits.d/clickhouse.conf
/usr/bin/clickhouse-server
/usr/bin/clickhouse
/usr/share/clickhouse

%files client
/etc/clickhouse-client/config.xml
/usr/bin/clickhouse-client

%files compressor
/usr/bin/clickhouse-compressor

%changelog
* Tue Jun 06 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54236
* Fri Mar 31 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- fix issue #5 - error with creating clickhouse user
* Wed Mar 01 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54165
* Fri Feb 10 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54159
* Fri Jan 13 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54127
* Mon Nov 14 2016 Nikolay Samofatov <nikolay.samofatov@red-soft.biz> 
- create spec file
